---
Parameters:
  # FIXME set input constraints for these
  S3BucketName:
    Description: "The name of the S3 bucket that will store the website files"
    Type: String
  DynamoDBTableName:
    Description: "The name of the DynamoDB table for the visitor count"
    Type: String

Resources:
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: S3BucketName
      WebsiteConfiguration:
        IndexDocument: index.html 
      CorsConfiguration:
        CorsRules:
          - 
            AllowedMethods: 
              - GET
            AllowedOrigins: 
              - "*"
            AllowedHeaders: 
              - "*"
      Tags:
        - Key: CostCenter
          Value: heyitschris.com

  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join 
        - ''
        - - 'logs-'
          - !Ref WebsiteBucket
      Tags:
        - Key: CostCenter
          Value: heyitschris.com

  WebsiteBucketBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: PublicAccessPolicy
          Version: 2012-10-17
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal:
                CanonicalUser: !GetAtt
                  - CloudFrontOAI
                  - S3CanonicalUserId
              Action: 's3:GetObject'
              Resource: !Join 
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref WebsiteBucket
                  - /*
        Bucket: !Ref WebsiteBucket
  
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties: 
      CloudFrontOriginAccessIdentityConfig: 
        Comment: !Join 
          - ''
          - - 'The OAI for the bucket: '
            - !Ref WebsiteBucket
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !Join 
            - ''
            - - !Ref WebsiteBucket
              - '.s3.amazonaws.com'
          Id: myS3Origin
          S3OriginConfig:
            OriginAccessIdentity: !Join 
              - ''
              - - 'origin-access-identity/cloudfront/'
                - !Ref CloudFrontOAI
        Enabled: 'true'
        Comment: This is a comment
        DefaultRootObject: index.html
        # Logging:
        #   IncludeCookies: 'false'
        #   Bucket: !Ref LogsBucket
        #   Prefix: CloudFrontLogs
        # Aliases:
        # - heyitschris.com
        # - www.heyitschris.com
        DefaultCacheBehavior:
          AllowedMethods:
          - HEAD
          - GET
          - OPTIONS
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          # TrustedSigners:
          # - 1234567890EX
          # - 1234567891EX
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_100
        ViewerCertificate:
          CloudFrontDefaultCertificate: 'true'

  DDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 
        !Ref DynamoDBTableName
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
  
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dynamodbAccessRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - dynamodb:*
              Resource: !Join 
                - ''
                - - 'arn:aws:dynamodb:'
                  - !Ref AWS::Region
                  - ':'
                  - !Ref AWS::AccountId
                  - ':table/'
                  - !Ref DDBTable
            - Effect: Allow
              Action:
              - logs:*
              Resource: "*"

  VisitorCountLambda:
    Type: AWS::Lambda::Function
    Description: This function retrieves and updates the visitor count in the DynamoDB database.
    Properties:
      # Environment: #fixme create an env variable with the table name and change the code to use that as well
      Code:
        ZipFile: |
          import json
          import boto3

          dynamodb = boto3.resource('dynamodb')
          table = dynamodb.Table('heyitschris.com')

          def handler(event, context):
              response = table.update_item(
                  Key={
                      "id": "visitorCount"
                  },
                  UpdateExpression='SET amount = amount + :inc',
                  ExpressionAttributeValues={
                      ':inc': 1
                  },
                  ReturnValues="UPDATED_NEW"
              )
              print("Response visitor count: ", response["Attributes"]["amount"])
              return {
                  "statusCode": 200,
                  "visitorCount": response["Attributes"]["amount"]
              }
      Handler: index.handler
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.6
      Timeout: 2
      Tags:
        - Key: CostCenter
          Value: heyitschris.com

  # This initialization function always fails to create. ignoring and solving it manually...
  # InitializeDynamoDB:
  #   Type: Custom::InitFunction
  #   DependsOn: DDBTable
  #   Properties:
  #     ServiceToken: !GetAtt InitFunction.Arn
  #     DynamoTableName: !Ref DDBTable

Outputs:
  CloudFrontURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - CloudFrontDistribution
          - DomainName
    Description: HTTPS Access point
  DEBUGDynamoDBTableRefPsuedoParam:
    Value: !Ref DDBTable
  DEBUGLambdaPolicyResourceARN:
    Value: !Join 
      - ''
      - - 'arn:aws:dynamodb:'
        - !Ref AWS::Region
        - ':'
        - !Ref AWS::AccountId
        - ':table/'
        - !Ref DDBTable